[unix_http_server]
file=/tmp/taskmaster.sock   ; the path to the socket file

[taskmasterd]
logfile=/tmp/taskmasterd.log ; main log file; default $CWD/supervisord.log
logfile_maxbytes=50MB        ; max main logfile bytes b4 rotation; default 50MB
logfile_backups=10           ; # of main logfile backups; 0 means none, default 10
loglevel=info                ; log level; default info; others: debug,warn,trace
pidfile=/tmp/taskmasterd.pid ; supervisord pidfile; default supervisord.pid
nodaemon=false               ; start in foreground if true; default false
minfds=1024                  ; min. avail startup file descriptors; default 1024
minprocs=200                 ; min. avail process descriptors;default 200

[taskmaster]
serverurl=unix:///tmp/taskmaster.sock ; use a unix:// URL  for a unix socket

[program:supertail]
command=/usr/bin/tail -f /tmp/test        ; the program (relative uses PATH, can take args)
process_name=%(program_name)s ; process_name expr (default %(program_name)s)
;numprocs=2                    ; number of processes copies to start (def 1)
directory=/tmp                ; directory to cwd to before exec (def no cwd)
umask=022                     ; umask for process (default None)
autostart=true                ; start at supervisord start (default: true)
;startsecs=1                   ; # of secs prog must stay up to be running (def. 1)
startretries=2                ; max # of serial start failures when starting (default 3)
autorestart=unexpected        ; when to restart if exited after running (def: unexpected)
exitcodes=0                   ; 'expected' exit codes used with autorestart (default 0)
;stopsignal=QUIT               ; signal used to kill process (default TERM)
;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)
;redirect_stdout=true          ; redirect proc stderr to stdout (default false)
;redirect_stderr=false          ; redirect proc stderr to stdout (default false)
stdout_logfile=/tmp/titi        ; stdout log path, NONE for none; default AUTO
;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO
environment="A":"1","B":"2"       ; process environment additions (def no adds)
;mail_report=mail@gmail.com ; warnings via email

[program:supermkdir]
command=/bin/mkdir /tmp/dossier        ; the program (relative uses PATH, can take args)
process_name=%(program_name)s ; process_name expr (default %(program_name)s)
numprocs=1                    ; number of processes copies to start (def 1)
directory=/tmp                ; directory to cwd to before exec (def no cwd)
umask=-1                     ; umask for process (default None)
autostart=true                ; start at supervisord start (default: true)
;startsecs=1                   ; # of secs prog must stay up to be running (def. 1)
startretries=2                ; max # of serial start failures when starting (default 3)
autorestart=unexpected        ; when to restart if exited after running (def: unexpected)
exitcodes=0                   ; 'expected' exit codes used with autorestart (default 0)
;stopsignal=QUIT               ; signal used to kill process (default TERM)
;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)
;redirect_stdout=true          ; redirect proc stderr to stdout (default false)
;redirect_stderr=true          ; redirect proc stderr to stdout (default false)
;stdout_logfile=/tmp/titi        ; stdout log path, NONE for none; default AUTO
;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO
;environment=A="1",B="2"       ; process environment additions (def no adds)
;mail_report=mail@gmail.com ; warnings via email

[program:supermkdir2]
command=/bin/mkdir dossier23        ; the program (relative uses PATH, can take args)
process_name=%(program_name)s ; process_name expr (default %(program_name)s)
;numprocs=022                    ; number of processes copies to start (def 1)
directory=/tmp                ; directory to cwd to before exec (def no cwd)
umask=1                     ; umask for process (default None)
;autostart=true                ; start at supervisord start (default: true)
;startsecs=1                   ; # of secs prog must stay up to be running (def. 1)
;startretries=3                ; max # of serial start failures when starting (default 3)
;autorestart=unexpected        ; when to restart if exited after running (def: unexpected)
;exitcodes=0                   ; 'expected' exit codes used with autorestart (default 0)
;stopsignal=QUIT               ; signal used to kill process (default TERM)
;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)
;redirect_stdout=true          ; redirect proc stderr to stdout (default false)
;redirect_stderr=true          ; redirect proc stderr to stdout (default false)
;stdout_logfile=/tmp/titi        ; stdout log path, NONE for none; default AUTO
;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO
;environment=A="1",B="2"       ; process environment additions (def no adds)
;mail_report=mail@gmail.com ; warnings via email

[program:supernginx]
command=sudo /usr/local/bin/nginx -g "daemon off;"         ; the program (relative uses PATH, can take args)
process_name=%(program_name)s ; process_name expr (default %(program_name)s)
numprocs=1                    ; number of processes copies to start (def 1)
directory=/tmp                ; directory to cwd to before exec (def no cwd)
;umask=022                     ; umask for process (default None)
autostart=true                ; start at supervisord start (default: true)
;startsecs=1                   ; # of secs prog must stay up to be running (def. 1)
startretries=0                ; max # of serial start failures when starting (default 3)
autorestart=never        ; when to restart if exited after running (def: unexpected)
exitcodes=0                   ; 'expected' exit codes used with autorestart (default 0)
;stopsignal=QUIT               ; signal used to kill process (default TERM)
;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)
;redirect_stdout=true          ; redirect proc stderr to stdout (default false)
;redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/tmp/titi.txt        ; stdout log path, NONE for none; default AUTO
;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO
;environment=A="1",B="2"       ; process environment additions (def no adds)
;mail_report=mail@gmail.com ; warnings via email
